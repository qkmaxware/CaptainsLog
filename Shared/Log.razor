<SlideDrawer @ref=drawer OnClose=@(() => DataProvider?.Save())>
    <TabView>
        <Tab Title="New Entry">
            @if (!ReferenceEquals(newEntry, null)) {
            if (ReferenceEquals(newEntry.Primary, null)) {
                newEntry.Primary = new LogEntryContents();
            }
            <label>Stardate @newEntry.Stardate.Stardate()</label>
            <input type="date" class="w3-input w3-margin-bottom" @bind=@newEntry.Stardate>
            <label>Title</label>
            <input type="text" class="w3-input w3-margin-bottom" placeholder="Title" @bind=@newEntry.Title/>
            <label>Contents</label>
            <textarea @bind=@newEntry.Primary.WrittenEntry></textarea>
            <p>Tip: use your phone's speech to text functionality to narrate your personal log just like in the show!</p>
            <div class="w3-padding">
                <button class="w3-button lcars-primary" style="width: 100%;" @onclick=addEntry>End Log</button>
            </div>
            }
        </Tab>
        <Tab Title="Entries">
            @if (!ReferenceEquals(log?.Items, null)) {
                foreach (var entry in ((IEnumerable<LogEntry>)log.Items).Reverse()) {
                    var self = entry;
                    var title = $"Stardate {entry.Stardate.Stardate()}";
                    if (!ReferenceEquals(self, null)) {
                    <TitleBlock Title=@title>
                        <p>@entry.Primary?.WrittenEntry</p>
                        @if (!ReferenceEquals(entry.Supplemental, null)) {
                            foreach (var supplemental in entry.Supplemental) {
                                <p>
                                    <strong>Supplemental</strong>
                                    <textarea @bind=@supplemental.WrittenEntry></textarea>
                                    
                                </p>
                            }
                        }
                        <div class="w3-row">
                            <div class="w3-col s6">
                                <button class="w3-button w3-flat" @onclick=@(() => { if(ReferenceEquals(self.Supplemental, null)) { self.Supplemental = new(); } self.Supplemental.Add(new LogEntryContents()); })>
                                    + Supplemental
                                </button>
                            </div>
                            <div class="w3-col s6" style="text-align: right;">
                                <button class="w3-button w3-round-large lcars-warning" @onclick=@(() => log?.Items?.Remove(self))>
                                    <img src="ui/delete.svg" class="icon">
                                </button>
                            </div>
                        </div>  
                    </TitleBlock>
                    }
                }
            }
        </Tab>
    </TabView>
    <div style="height: 64px;"></div>
</SlideDrawer>

@code {
    [Parameter] public IAppDataProvider? DataProvider {get; set;}
    
    private SlideDrawer? drawer;
    private PersonalLog? log;

    private LogEntry? newEntry = null;

    public void Show() {
        var data = DataProvider?.GetAppData();
        var log = data?.Log;
        if (ReferenceEquals(log, null) && !ReferenceEquals(data, null)) {
            log = new PersonalLog();
            data.Log = log;
        }
        PersonalLog nonNullLog = log ?? new PersonalLog();
        this.log = nonNullLog;
        if (ReferenceEquals(nonNullLog.Items, null)) {
            nonNullLog.Items = new List<LogEntry>();
        }

        // Only do this if the entry is null
        if (ReferenceEquals(newEntry, null)) {
            newEntry = new LogEntry();
            newEntry.Stardate = new DateTime(2371, 1, 1); // Default date for STA
            if (nonNullLog.Items.Count > 0) {
                newEntry.Stardate = nonNullLog.Items[nonNullLog.Items.Count - 1].Stardate.AddDays(1); // Next log date
            }
        }

        StateHasChanged();
        drawer?.Show();
    }

    private void addEntry() {
        @if (!ReferenceEquals(newEntry, null)) {
            newEntry.CreatedOn = DateTime.Now;
            log?.Items?.Add(newEntry);
            var nextDate = newEntry.Stardate.AddDays(1);
            this.newEntry = new LogEntry();
            this.newEntry.Stardate = nextDate;
        }
    }
}